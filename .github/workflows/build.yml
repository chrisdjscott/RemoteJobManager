name: Build

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9']
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Display Python version
        run: python --version

      - name: Build the package
        run: python -m pip install .

      - name: Check rjm_batch_submit command installed
        run: rjm_batch_submit --help

      - name: Check rjm_batch_wait command installed
        run: rjm_batch_wait --help

      - name: Install pyinstaller
        run: python -m pip install pyinstaller
      - name: Build rjm_batch_submit
        run: pyinstaller -F --additional-hooks-dir=. ../scripts/rjm_batch_submit.py
        working-directory:  ./extra/pyinstaller
      - name: Build rjm_batch_wait
        run: pyinstaller -F --additional-hooks-dir=. ../scripts/rjm_batch_wait.py
        working-directory:  ./extra/pyinstaller
      - name: Zip binaries
        uses: vimtor/action-zip@v1
        with:
          files: extra/pyinstaller/dist
          recursive: false
          dest: RemoteJobManager-${{ runner.os }}.zip
      - uses: actions/upload-artifact@v2
        with:
          name: Upload artifacts
          path: RemoteJobManager-*.zip





#      - name: Install cx_Freeze
#        run: python -m pip install cx_Freeze
#      - name: Build the frozen package
#        run: python setup.py build
#        working-directory: ./extra/cx_Freeze
##      - name: Create macOS disk image
##        run: python setup.py bdist_dmg
##        working-directory:  ./extra/cx_Freeze
##        if: runner.os == 'macOS'
#      - name: Create Windows installer
#        run: python setup.py bdist_msi
#        working-directory:  ./extra/cx_Freeze
#        if: runner.os == 'Windows'
##      - uses: actions/upload-artifact@v2
##        with:
##          name: Linux artifacts
##          path: extra/cx_Freeze/build
##        if: runner.os == 'Linux'
##      - uses: actions/upload-artifact@v2
##        with:
##          name: macOS artifacts
##          path: extra/cx_Freeze/build/RemoteJobManager-*.dmg
##        if: runner.os == 'macOS'
#      - uses: actions/upload-artifact@v2
#        with:
#          name: Windows artifacts
#          path: extra/cx_Freeze/dist/RemoteJobManager-*.msi
#        if: runner.os == 'Windows'
